install.packages("rjson")
library(rjson)
data = fromJSON("http://tagpro-centra.koalabeast.com/maps.json")
data = fromJSON(readlines("http://tagpro-centra.koalabeast.com/maps.json"))
data = fromJSON(readLines("http://tagpro-centra.koalabeast.com/maps.json"))
data
test = data.table(data)
library(data.table);library(bit64)
library(ggplot2)
test = data.table(data)
View(test)
test = data.table(data[[1]], data[[2]])
retired = data[[1]]
retired = data[[2]]
rotation = data[[1]]
retired = data$retired
rotation = data$rotation
retired
rm(list=ls());gc()
json_data = fromJSON(readLines("http://tagpro-centra.koalabeast.com/maps.json"))
retired = data$retired
retired = data$retired
retired = json_data$retired
rotation = json_data$rotation
test = unlist(retired)
test = data.table(retired)
View(test)
test = data.table(unlist(retired))
View(test)
?data.table
test = data.table(retired, check.names = T)
View(test)
library(jsonlite)
json_data = fromJSON(readLines("http://tagpro-centra.koalabeast.com/maps.json"))
retired = json_data$retired
rotation = json_data$rotation
View(retired)
View(rotation)
data = data.table(rbind(rotation, retired))
View(data)
rm(list=setdiff(ls(), "data"))
rm(list=ls());gc()
library(data.table);library(bit64)
library(ggplot2)
#library(rjson)
library(jsonlite)
json_data = fromJSON(readLines("http://tagpro-centra.koalabeast.com/maps.json"))
retired = data.table(json_data$retired)
rotation = data.table(json_data$rotation)
rm(json_data)
data = data.table(rbind(rotation, retired))
View(rotation)
data[, votes := totalDislikes+totalIndifferents+totalLikes]
View(data)
colnames(data)
rm(list=setdiff(ls(), "data")
data = data.table(rbind(rotation, retired))
lm_formula = "averageRating ~ total"
data[, c("rating_estimate", "votes_estimate") :=
.(min(y)+max(y)-y, x)]
ggplot(data=data, aes(x=votes_estimate, y=rating_estimate))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlim(c(0,900))+
ylim(c(-75,270))+
xlab("(sort of) number of votes")+
ylab("(sort of) favorable rating")+
theme_bw()
rm(list=setdiff(ls(), "data")
data = data.table(rbind(rotation, retired))
lm_formula = "averageRating ~ total"
data[, c("rating_estimate", "votes_estimate") :=
.(min(y)+max(y)-y, x)]
ggplot(data=data, aes(x=votes_estimate, y=rating_estimate))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlim(c(0,900))+
ylim(c(-75,270))+
xlab("(sort of) number of votes")+
ylab("(sort of) favorable rating")+
theme_bw()
rm(list=setdiff(ls(), "data"))
setnames(data, old="totalUsers", new="votes")
rm(list=ls());gc()
library(data.table);library(bit64)
library(ggplot2)
#library(rjson)
library(jsonlite)
json_data = fromJSON(readLines("http://tagpro-centra.koalabeast.com/maps.json"))
retired = data.table(json_data$retired)
rotation = data.table(json_data$rotation)
rm(list=setdiff(ls(), "data"))
data = data.table(rbind(rotation, retired))
setnames(data, old="totalUsers", new="totalVotes")
lm_formula = "averageRating ~ totalPlays + totalVotes"
rm(list=ls());gc()
library(data.table);library(bit64)
library(ggplot2)
#library(rjson)
library(jsonlite)
json_data = fromJSON(readLines("http://tagpro-centra.koalabeast.com/maps.json"))
retired = data.table(json_data$retired)
rotation = data.table(json_data$rotation)
data = data.table(rbind(rotation, retired))
rm(list=setdiff(ls(), "data"))
setnames(data, old="totalUsers", new="totalVotes")
lm_formula = "averageRating ~ totalPlays + totalVotes"
colnames(data)
table(data[, status])
table(data[, category])
reg = lm(data[category=="Maps in Rotation"])
reg = lm(data[category=="Maps in Rotation"], formula = lm_formula)
summary(reg)
reg = lm(data, formula = lm_formula)
summary(reg)
reg = lm(data[category=="Maps in Rotation"], formula = lm_formula)
summary(reg)
lm_formula = "averageRating ~  totalVotes"
reg = lm(data[category=="Maps in Rotation"], formula = lm_formula)
summary(reg)
ggplot(data=data, aes(x=totalVotes, y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlim(c(0,900))+
ylim(c(-75,270))+
xlab("(sort of) number of votes")+
ylab("(sort of) favorable rating")+
theme_bw()
ggplot(data=data, aes(x=totalVotes, y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("Votes")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=totalPlays, y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("Votes")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=totalPlays, y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("Plays")+
ylab("Average rating")+
theme_bw()
?stat_smooth
ggplot(data=data, aes(x=totalPlays, y=averageRating))+
geom_point()+
stat_smooth(method="auto", col="red")+
xlab("Plays")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=totalPlays, y=averageRating))+
geom_point()+
stat_smooth(method="glm", col="red")+
xlab("Plays")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=totalPlays, y=averageRating))+
geom_point()+
stat_smooth(method="loess", col="red")+
xlab("Plays")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=totalPlays, y=averageRating))+
geom_point()+
stat_smooth(method="gam", col="red")+
xlab("Plays")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=totalPlays, y=log(averageRating)))+
geom_point()+
stat_smooth(method="gam", col="red")+
xlab("Plays")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=totalPlays, y=log(averageRating)))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("Plays")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=log(totalPlays), y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("Plays")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=log(totalPlays), y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("log(Plays)")+
ylab("Average rating")+
theme_bw()
lm_formula = "averageRating ~ log(totalVotes)"
reg = lm(data[category=="Maps in Rotation"], formula = lm_formula)
summary(reg)
lm_formula = "averageRating ~ log(totalVotes)+log(totalPlays)"
reg = lm(data[category=="Maps in Rotation"], formula = lm_formula)
summary(reg)
ggplot(data=data, aes(x=log(totalVotes), y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("log(Plays)")+
ylab("Average rating")+
theme_bw()
ggplot(data=data, aes(x=log(totalPlays), y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("log(Plays)")+
ylab("Average rating")+
theme_bw()
View(data)
ggplot(data=data[category=="Maps in Rotation"], aes(x=log(totalPlays), y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("log(Plays)")+
ylab("Average rating")+
theme_bw()
ggplot(data=data[category=="Maps in Rotation"], aes(x=log(totalVotes), y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("log(Plays)")+
ylab("Average rating")+
theme_bw()
View(data)
131P$1I3
1310-183
1127/(1310+183)
1127/(1609)
summary(reg)
lm_formula = "averageRating ~ log(totalVotes)"
reg = lm(data[category=="Maps in Rotation"], formula = lm_formula)
summary(reg)
ggplot(data=data[category=="Maps in Rotation"], aes(x=log(totalVotes), y=averageRating))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("log(Plays)")+
ylab("Average rating")+
theme_bw()
ggplot(data=data[category=="Maps in Rotation"], aes(x=totalPlays, y=totalVotes))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("log(Plays)")+
ylab("Average rating")+
theme_bw()
ggplot(data=data[category=="Maps in Rotation"], aes(x=log(totalPlays), y=totalVotes))+
geom_point()+
stat_smooth(method="lm", col="red")+
xlab("log(Plays)")+
ylab("Average rating")+
theme_bw()
lm_formula = "totalPlays ~ log(totalVotes)"
reg = lm(data[category=="Maps in Rotation"], formula = lm_formula)
summary(reg)
lm_formula = "totalVotes ~ log(totalPlays)"
reg = lm(data[category=="Maps in Rotation"], formula = lm_formula)
summary(reg)
max(data[, totalPlays])
lm_formula = "totalVotes ~ log(totalPlays)+averageRating"
reg = lm(data[category=="Maps in Rotation"], formula = lm_formula)
summary(reg)
